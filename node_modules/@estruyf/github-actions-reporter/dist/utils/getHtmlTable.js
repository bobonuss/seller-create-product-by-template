"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getHtmlTable = void 0;
const ansi_to_html_1 = __importDefault(require("ansi-to-html"));
const getTestStatus_1 = require("./getTestStatus");
const getHtmlTable = (tests, showError) => {
    const convert = new ansi_to_html_1.default();
    const content = [];
    content.push(`<br>`);
    content.push(`<table role="table">`);
    content.push(`<thead>`);
    content.push(`<tr>`);
    content.push(`<th>Test</th>`);
    content.push(`<th>Status</th>`);
    content.push(`<th>Duration</th>`);
    content.push(`<th>Retries</th>`);
    if (showError) {
        content.push(`<th>Error</th>`);
    }
    content.push(`</tr>`);
    content.push(`</thead>`);
    content.push(`<tbody>`);
    for (const test of tests) {
        // Get the last result
        const result = test.results[test.results.length - 1];
        content.push(`<tr>`);
        content.push(`<td>${test.title}</td>`);
        content.push(`<td>${(0, getTestStatus_1.getTestStatus)(result)}</td>`);
        content.push(`<td>${result.duration / 1000}s</td>`);
        content.push(`<td>${result.retry}</td>`);
        if (showError) {
            content.push(`<td>${result.error && result.error.message
                ? convert.toHtml(result.error.message)
                : ""}</td>`);
        }
        content.push(`</tr>`);
    }
    content.push(`</tbody>`);
    content.push(`</table>`);
    return content.join("\n");
};
exports.getHtmlTable = getHtmlTable;
